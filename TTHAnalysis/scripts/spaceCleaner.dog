#!/bin/bash
# set -x

## help
function _help() {
    printf "Usage $(basename $0) <chunks-path> <eos-path> <dog-freq>\n\n"; exit 0;
}
for arg in ${@}; do
    { [ "$arg" == "--help" ] || [ "$arg" == "-h" ] || [ "$arg" == "-help" ]; } && _help
done

## env variables
input=$1
output=$2
dogfreq=$3
quotaThreshold=60
finishedBefore=0
{ [ -z $input ] || [ -z $output ]; } && _help

## signal handler
trap prompt SIGINT # #ctrl+c
function prompt() {
    printf "\nOptions accessible via this prompt: --dogfreq <freq>, --quota-threshold <threshold>, quota, exit
input > " > /dev/stderr
    read -a args
    for (( i=0; i<${#args[*]}; i++ )); do
	[ "${args[$i]}" == "--dogfreq" ] && { dogfreq=${args[$i+1]}; echo "new dogfreq=$dogfreq" > /dev/stderr; continue 2; }
	[ "${args[$i]}" == "--quota-threshold" ] && { quotaThreshold=${args[$i+1]}; echo "new quotaThreshold=$quotaThreshold" > /dev/stderr; continue 2; }
	[ "${args[$i]}" == "quota" ] && { fs quota > /dev/stderr; continue; }
	[ "${args[$i]}" == "exit" ] && exit 0
    done
    args=""
    return
}

## this tool returns if find that more jobs have finished its previous check
## help: checkIfJobsFinished <dogfreq>
function checkIfJobsFinished() {
    while true; do
	finishedJobs=$(condor_q | grep $USER | awk 'BEGIN{sum=0};{sum+=$6};END{print sum}')
	(( $finishedJobs < $finishedBefore )) && return 0
	finishedBefore=$finishedJobs
	sleep $1
    done
}

## this tools checks in the log files of the chunks and if they're done it copies them to eos
## help: moveFinishedToEOS <chunksPath> <eosPath>
function moveFinishedToEOS() {
    chunksPath=$1
    eosPath=$2
    for chunkPath in $(ls $chunksPath/*_Chunk* -d); do
	grep 'return value 0' $chunkPath/*log > /dev/null && {
	    echo "Finished chunk found. $chunkPath"
	    mv $chunkPath $eosPath/.
	}
    done
    return 0
}



##############################################################################################

logFiles=$(ls $input/*Chunk*/*log | wc | awk '{print $1}')
(( $logFiles == 0 )) && { echo "Zero (0) log files in $taskDir."; exit 1; }
while true; do
    ## checkIfJobsFinished $dogfreq
    quota=$(fs quota | awk '{print $1}' | sed s/%//); echo "Current afs-quota ${quota}% (action to be taken after ${quotaThreshold}%)"
    finishedJobs=$(grep -o "return value 0" $input/*Chunk*/*log | wc | awk '{print $1}')
    (( $quota > $quotaThreshold )) && moveFinishedToEOS $input $output
    (( $finishedJobs == $logFiles )) && { moveFinishedToEOS $input $output; break; }
    echo "Will sleep for $dogfreq"
    sleep $dogfreq
done

rootFiles=$(ls $output/*root | wc | awk '{print $1}')
(( $rootFiles != $taskLogs )) && { echo "All jobs have finished but the remote files are less than the jobs ran."; return 1; }
return 0
